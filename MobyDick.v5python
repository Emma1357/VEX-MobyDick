{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain_inertial = Inertial(Ports.PORT3)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_inertial, 319.19, 320, 40, MM, 1)\npotentiometer_A = Potentiometer(brain.three_wire_port.a)\nfork_motor_group_motor_a = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nfork_motor_group_motor_b = Motor(Ports.PORT9, GearSetting.RATIO_18_1, True)\nfork_motor_group = MotorGroup(fork_motor_group_motor_a, fork_motor_group_motor_b)\nbumper_fork = Bumper(brain.three_wire_port.b)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Inertial\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Inertial\")\n    drivetrain_inertial.calibrate()\n    while drivetrain_inertial.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       Emma Wilkerson\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\nmyVariable = 0\n\ndef autonomous():\n    global myVariable\n    # For starting position A\n    fork_motor_group.spin(FORWARD)\n    if potentiometer_A.angle(PERCENT) == 75:\n        fork_motor_group.stop()\n    wait(0.5, SECONDS)\n    drivetrain.turn_to_rotation(17, DEGREES, wait=True)\n    wait(1, SECONDS)\n    while True:\n        if bumper_fork.pressing():\n            drivetrain.stop()\n            break\n        else:\n            drivetrain.drive(FORWARD)\n        wait(5, MSEC)\n    while True:\n        if potentiometer_A.angle(PERCENT) == 65:\n            fork_motor_group.stop()\n            break\n        else:\n            fork_motor_group.spin(REVERSE)\n        wait(5, MSEC)\n    drivetrain.drive_for(REVERSE, 1127, MM, wait=True)\n    drivetrain.turn_to_rotation(45, DEGREES, wait=True)\n    drivetrain.drive_for(FORWARD, 200, MM, wait=True)\n    while True:\n        if potentiometer_A.angle(PERCENT) == 75:\n            fork_motor_group.stop()\n            break\n        else:\n            fork_motor_group.spin(FORWARD)\n        wait(5, MSEC)\n    drivetrain.drive_for(REVERSE, 300, MM, wait=True)\n    wait(1, SECONDS)\n    drivetrain.turn_to_rotation(110, DEGREES, wait=True)\n    wait(1, SECONDS)\n    drivetrain.drive_for(FORWARD, 500, MM, wait=True)\n    while True:\n        if potentiometer_A.angle(PERCENT) == 65:\n            fork_motor_group.stop()\n            break\n        else:\n            fork_motor_group.spin(REVERSE)\n        wait(5, MSEC)\n    wait(1, SECONDS)\n    drivetrain.drive_for(FORWARD, 200, MM, wait=True)\n    wait(1, SECONDS)\n    drivetrain.turn_to_rotation(90, DEGREES, wait=True)\n    wait(1, SECONDS)\n    drivetrain.drive_for(FORWARD, 800, MM, wait=True)","textLanguage":"python","rconfig":[{"port":[1,10,3],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}},{"port":[1],"name":"potentiometer_A","customName":true,"deviceType":"Potentiometer","deviceClass":"pot","setting":{},"triportSourcePort":22},{"port":[2,9],"name":"fork_motor_group","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"true"}},{"port":[2],"name":"bumper_fork","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20211013.15.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}